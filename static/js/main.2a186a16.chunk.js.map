{"version":3,"sources":["Components/feedbackOptions/FeedbackOptions.js","Components/section/Section.js","Components/notification/Notification.js","Components/statistics/Statistics.js","Components/App.js","index.js","Components/feedbackOptions/Feedback.module.css","Components/statistics/Statistics.module.css"],"names":["FeedbackOptions","leaveFeedback","fbOptions","className","ul","map","item","li","button","onClick","Section","children","title","console","log","Notification","Statistics","state","total","percentage","initialState","good","neutral","bad","App","useState","setState","countTotalFeedback","name","prev","Object","entries","Math","floor","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"oQAoBeA,EAhBS,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,UACrC,OACI,oBAAIC,UAAWC,KAAf,SACKF,EAAUG,KAAI,SAAAC,GAAI,OACX,oBAAIH,UAAWI,KAAf,SACA,wBAAQJ,UAAWK,SAAQC,QAAS,kBAAMR,EAAcK,IAAxD,SAAgEA,YCSrEI,EAfC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAEzB,OADAC,QAAQC,IAAI,CAACH,aAET,oCACI,6BAAKC,IACJD,M,OCEEI,EARM,WACjB,OACE,6BACE,qDC0BOC,EA1BI,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAClC,OACE,oBAAIhB,UAAWC,KAAf,SACGc,EACC,qCACGD,EAAMZ,KAAI,SAACC,GAAD,OACT,+BACGA,EAAK,GADR,KACcA,EAAK,SAGrB,yCAAYY,KACZ,qDAAwBC,EAAxB,UAGF,cAAC,EAAD,OCdFC,EAAe,CACnBC,KAAM,EACNC,QAAS,EACTC,IAAK,GAwCQC,EArCH,WACV,MAA0BC,mBAAS,eAAKL,IAAxC,mBAAOH,EAAP,KAAcS,EAAd,KAQMC,EAAqB,WAEzB,OAD+BV,EAAvBI,KAAuBJ,EAAjBK,QAAiBL,EAARM,KAQzB,OACE,qCACE,cAAC,EAAD,CAASX,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEX,cAnBc,SAAC2B,GACrBF,GAAS,SAACG,GAAD,mBAAC,eAAcA,GAAf,kBACND,EAAOC,EAAKD,GAAQ,QAkBjB1B,UAAW,CAAC,OAAQ,UAAW,WAGnC,cAAC,EAAD,CAASU,MAAO,aAAhB,SACE,cAAC,EAAD,CACEK,MAAOa,OAAOC,QAAQd,GACtBC,MAAOS,IACPR,WAfCa,KAAKC,MAAOhB,EAAMI,KAAOM,IAAwB,MAAQ,UCrBpEO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,GAAK,qBAAqB,GAAK,qBAAqB,OAAS,2B,kBCA/ED,EAAOC,QAAU,CAAC,GAAK,0B","file":"static/js/main.2a186a16.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ul, li, button } from './Feedback.module.css';\r\n\r\nconst FeedbackOptions = ({leaveFeedback, fbOptions}) => {\r\n    return (\r\n        <ul className={ul}>\r\n            {fbOptions.map(item => \r\n                    <li className={li}>\r\n                    <button className={button} onClick={() => leaveFeedback(item)}>{item}</button>\r\n                    </li>\r\n                )}\r\n        </ul>\r\n    );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    leaveFeedback: PropTypes.func.isRequired\r\n}\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ children, title }) => {\r\n    console.log({children})\r\n    return (\r\n        <section>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </section>\r\n    );\r\n};\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\n\r\nconst Notification = () => {\r\n    return (\r\n      <li>\r\n        <p>No feedback given</p>\r\n      </li>\r\n    );\r\n}\r\n\r\nexport default Notification;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {ul} from './Statistics.module.css'\r\nimport Notification from \"../notification/Notification\";\r\n\r\nconst Statistics = ({ state, total, percentage }) => {\r\n  return (\r\n    <ul className={ul}>\r\n      {total ? (\r\n        <>\r\n          {state.map((item) => (\r\n            <li>\r\n              {item[0]}: {item[1]}\r\n            </li>\r\n          ))}\r\n          <li>total: {total}</li>\r\n          <li>Positive feedback: {percentage}%</li>\r\n        </>\r\n      ) : (\r\n        <Notification/>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  state: PropTypes.array.isRequired,\r\n  total: PropTypes.func.isRequired,\r\n  percentage: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Statistics;\r\n","import React, { useState } from \"react\";\r\nimport FeedbackOptions from \"./feedbackOptions/FeedbackOptions\";\r\nimport Section from \"./section/Section\";\r\nimport Statistics from \"./statistics/Statistics\";\r\n\r\nconst initialState = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n};\r\n\r\nconst App = () => {\r\n  const [state, setState] = useState({ ...initialState });\r\n\r\n  const leaveFeedback = (name) => {\r\n    setState((prev) => ({...prev, \r\n      [name]: prev[name] + 1,\r\n    }));\r\n  };\r\n\r\n  const countTotalFeedback = () => {\r\n    const { good, neutral, bad } = state;\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    return Math.floor((state.good / countTotalFeedback()) * 100) || 0;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Section title={\"Please Leave Feedback\"}>\r\n        <FeedbackOptions\r\n          leaveFeedback={leaveFeedback}\r\n          fbOptions={[\"good\", \"neutral\", \"bad\"]}\r\n        />\r\n      </Section>\r\n      <Section title={\"Statistics\"}>\r\n        <Statistics\r\n          state={Object.entries(state)}\r\n          total={countTotalFeedback()}\r\n          percentage={countPositiveFeedbackPercentage()}\r\n        />\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"Feedback_ul__1pbyd\",\"li\":\"Feedback_li__23xAg\",\"button\":\"Feedback_button__DB40K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"Statistics_ul__Q0r48\"};"],"sourceRoot":""}